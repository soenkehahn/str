mod common;

use anyhow::Result;
use common::Context;

#[test]
fn dependencies_in_node_modules() -> Result<()> {
    let context = Context::new()?;
    context.write(
        "node_modules/foo/package.json",
        r#"
            {
                "name": "foo",
                "main": "src/index.js"
            }
        "#,
    )?;
    context.write(
        "node_modules/foo/src/index.js",
        r#"
            function foo() {
                console.error("foo called");
            }
            module.exports = { foo };
        "#,
    )?;
    context.write(
        "index.test.ts",
        r#"
            import { it, describe } from "str";
            import { foo } from "foo";
            describe("description", () => {
                it("works", () => {
                    foo();
                });
            });
        "#,
    )?;
    context.run_assert(
        "index.test.ts",
        0,
        r#"
            index.test.ts -> description -> works ...
            foo called
            index.test.ts -> description -> works PASSED
            Ran 1 test, 1 passed, 0 failed.
        "#,
    )?;
    Ok(())
}

#[test]
fn dynamically_generated_import_paths_in_node_modules() -> Result<()> {
    let context = Context::new()?;
    context.write(
        "node_modules/foo/package.json",
        r#"
            {
                "name": "foo",
                "main": "src/index.js"
            }
        "#,
    )?;
    context.write(
        "node_modules/foo/src/index.js",
        r#"
            function foo() {
                let path = "./other";
                path += "-module.js";
                require(path);
            }
            module.exports = { foo };
        "#,
    )?;
    context.write(
        "node_modules/foo/src/other-module.js",
        r#"
            console.error("other module imported");
        "#,
    )?;
    context.write(
        "index.test.ts",
        r#"
            import { it, describe } from "str";
            import { foo } from "foo";
            describe("description", () => {
                it("works", () => {
                    foo();
                });
            });
        "#,
    )?;
    context.run_assert(
        "index.test.ts",
        0,
        r#"
            index.test.ts -> description -> works ...
            other module imported
            index.test.ts -> description -> works PASSED
            Ran 1 test, 1 passed, 0 failed.
        "#,
    )?;
    Ok(())
}
